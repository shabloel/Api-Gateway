server.port=8083
spring.application.name=api-gateway
#To make spring cloud api gateway use the load balancer,
# and to route http requests to one of the running instances of the application,
# in stead of supplying a complete uri as f.e. http://localhost:8082
# we have to use lb://<application-name>. This is using the internal load balancer.
spring.cloud.gateway.routes[0].id = users-status-check
#spring.cloud.gateway.routes[0].url = http:localhost:8082
spring.cloud.gateway.routes[0].uri = lb://demo-resource-server
#This is like a if statment. Both statements have to be true
spring.cloud.gateway.routes[0].predicates[0] = Path=/users/status/check
spring.cloud.gateway.routes[0].predicates[1] = Method=GET
#Downstream api only needs JWT access token so we can remove cookies from the header
spring.cloud.gateway.routes[0].filters[0] = RemoveRequestHeader=Cookie

#Albums resource server
spring.cloud.gateway.routes[1].id = albums
#spring.cloud.gateway.routes[1].uri = http://localhost:8091
spring.cloud.gateway.routes[1].uri = lb://demo-resource-server-albums
#This is like an if statement. Both statements have to be true
spring.cloud.gateway.routes[1].predicates[0] = Path=/albums
spring.cloud.gateway.routes[1].predicates[1] = Method=GET
#Downstream api only needs JWT access token so we can remove cookies from the header
spring.cloud.gateway.routes[1].filters[0] = RemoveRequestHeader=Cookie

#Photos-resource server
spring.cloud.gateway.routes[2].id = photos
#spring.cloud.gateway.routes[2].uri = http://localhost:8090
spring.cloud.gateway.routes[2].uri = lb://resource-server-photos
#This is like a if statment. Both statements have to be true
spring.cloud.gateway.routes[2].predicates[0] = Path=/photos
spring.cloud.gateway.routes[2].predicates[1] = Method=GET
#Downstream api only needs JWT access token so we can remove cookies from the header
spring.cloud.gateway.routes[2].filters[0] = RemoveRequestHeader=Cookie

##Where to find Eureka service, where is it running
eureka.client.service-url.defaultZone = http://localhost:8010/eureka




